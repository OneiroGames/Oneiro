//
// Copyright (c) Oneiro Games. All rights reserved.
// Licensed under the GNU General Public License, Version 3.0.
//

module;

#include "Oneiro/Common/StdAfx.hpp"

export module Oneiro.Common.FileSystem.Path;

import <filesystem>;

export namespace oe::FileSystem
{
	class OE_API Path : public std::filesystem::path
	{
	public:
		using std::filesystem::path::path;
		Path(std::filesystem::path path);

		[[nodiscard]] Path GetLocal() const;
		[[nodiscard]] Path GetGlobal() const;

		Path& FixSeparator()
		{
			auto str = this->string();
			std::replace(str.begin(), str.end(), '\\', '/');
			Path path{str};
			path.swap(*this);
			return *this;
		}

		[[nodiscard]] bool IsValid() const noexcept;
		[[nodiscard]] bool IsLocal() const noexcept;
		[[nodiscard]] bool IsGlobal() const noexcept;

		class Iterator : public std::filesystem::directory_iterator
		{
		public:
			using std::filesystem::directory_iterator::directory_iterator;
		};
	};

	OE_API void CreatePath(const Path& Path) noexcept;
	OE_API Path CurrentPath() noexcept;

	OE_API bool IsPath(const Path& Path) noexcept;
	OE_API bool IsFile(const Path& Path) noexcept;
	OE_API bool IsExists(const Path& Path) noexcept;

	OE_API inline Path FixSeparator(const Path& path) noexcept
	{
		auto str = path.string();
		std::replace(str.begin(), str.end(), '\\', '/');
		return str;
	}
} // namespace oe::FileSystem